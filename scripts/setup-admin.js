const mongoose = require('mongoose');
const User = require('../src/lib/User');
require('dotenv').config();

const setupAdmin = async () => {
  try {
    console.log('üîß Configuration du syst√®me admin...');

    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/boutique-vetements', {
      useNewUrlParser: true,
      useUnifiedTopology: true,
    });

    console.log('‚úÖ Connect√© √† MongoDB');

    // V√©rifier s'il y a des comptes admin
    const adminCount = await User.countDocuments({ role: 'admin' });
    
    if (adminCount === 0) {
      console.log('\nüéâ Aucun compte admin trouv√© !');
      console.log('üí° Vous pouvez maintenant cr√©er votre compte admin via:');
      console.log('   - URL: http://localhost:3000/admin/setup');
      console.log('   - Ou utilisez le raccourci Ctrl+Shift+L');
    } else {
      console.log(`\n‚ö†Ô∏è ${adminCount} compte(s) admin trouv√©(s) dans la base de donn√©es.`);
      
      if (adminCount === 1) {
        const admin = await User.findOne({ role: 'admin' });
        console.log(`üë§ Admin existant: ${admin.email}`);
        console.log('‚úÖ Configuration admin d√©j√† en place.');
      } else {
        console.log('‚ùå Plusieurs comptes admin d√©tect√©s. Un seul est autoris√©.');
        console.log('üí° Supprimez les comptes admin en trop manuellement.');
      }
    }

    console.log('\nüìã Instructions:');
    console.log('1. Visitez http://localhost:3000/admin/setup');
    console.log('2. Cr√©ez votre compte admin unique');
    console.log('3. Connectez-vous via http://localhost:3000/admin/login');

    process.exit(0);
  } catch (error) {
    console.error('‚ùå Erreur lors de la configuration:', error);
    process.exit(1);
  }
};

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  setupAdmin();
}

module.exports = setupAdmin;
