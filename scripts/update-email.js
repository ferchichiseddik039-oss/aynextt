const mongoose = require('mongoose');

// Configuration de la base de donn√©es
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/boutique-vetements';

async function updateEmail() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(MONGODB_URI);
    console.log('‚úÖ Connect√© √† MongoDB');

    // Utiliser la collection directement pour forcer la mise √† jour
    const db = mongoose.connection.db;
    const collection = db.collection('settings');

    // Mettre √† jour seulement le nom de la boutique (garder l'email modifiable)
    const result = await collection.updateOne(
      {}, // Trouver le premier document
      {
        $set: {
          'informationsGenerales.nomBoutique': 'AYNEXT'
        }
      }
    );

    if (result.modifiedCount > 0) {
      console.log('‚úÖ Nom de la boutique mis √† jour avec succ√®s !');
    } else {
      console.log('‚ÑπÔ∏è  Aucun document modifi√© (peut-√™tre d√©j√† √† jour)');
    }

    // V√©rifier le r√©sultat
    const updatedSettings = await collection.findOne({});
    if (updatedSettings && updatedSettings.informationsGenerales) {
      console.log('üîç V√©rification:');
      console.log('   - Nom boutique:', updatedSettings.informationsGenerales.nomBoutique);
      console.log('   - Email:', updatedSettings.informationsGenerales.email);
      console.log('   - T√©l√©phone:', updatedSettings.informationsGenerales.telephone);
    }

  } catch (error) {
    console.error('‚ùå Erreur lors de la mise √† jour:', error);
  } finally {
    // Fermer la connexion
    await mongoose.connection.close();
    console.log('üîå Connexion ferm√©e');
  }
}

// Ex√©cuter le script
updateEmail();
