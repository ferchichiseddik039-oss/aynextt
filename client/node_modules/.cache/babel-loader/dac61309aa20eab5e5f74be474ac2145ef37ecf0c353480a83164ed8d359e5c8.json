{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\houda\\\\OneDrive\\\\Bureau\\\\boutique-vetements\\\\client\\\\src\\\\contexts\\\\OrdersContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersContext = /*#__PURE__*/createContext();\nexport const useOrders = () => {\n  _s();\n  const context = useContext(OrdersContext);\n  if (!context) {\n    throw new Error('useOrders must be used within an OrdersProvider');\n  }\n  return context;\n};\n_s(useOrders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const OrdersProvider = ({\n  children\n}) => {\n  _s2();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fonction pour r√©cup√©rer les commandes de l'utilisateur\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('üîë Pas de token d\\'authentification');\n        setOrders([]);\n        setLoading(false);\n        setError('Veuillez vous connecter pour voir vos commandes');\n        return;\n      }\n\n      // SOLUTION ROBUSTE: Utiliser uniquement fetch avec timeout court\n      console.log('üì§ R√©cup√©ration des commandes avec fetch...');\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 secondes max\n\n      try {\n        const response = await fetch('http://localhost:5000/api/orders', {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-auth-token': token\n          },\n          signal: controller.signal\n        });\n        clearTimeout(timeoutId);\n        console.log(`üìä R√©ponse serveur: ${response.status}`);\n        if (response.status === 401) {\n          console.log('üîë Token expir√© ou invalide');\n          localStorage.removeItem('token');\n          setOrders([]);\n          setLoading(false);\n          setError('Session expir√©e - Veuillez vous reconnecter');\n          return;\n        }\n        if (!response.ok) {\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log(`‚úÖ ${data.length} commande(s) r√©cup√©r√©e(s)`);\n        setOrders(data);\n      } catch (fetchError) {\n        clearTimeout(timeoutId);\n        if (fetchError.name === 'AbortError') {\n          throw new Error('Timeout: Le serveur met trop de temps √† r√©pondre');\n        }\n        throw fetchError;\n      }\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3, _error$response4;\n      console.error('‚ùå Erreur lors du chargement des commandes:', error);\n      let errorMessage = 'Erreur lors du chargement des commandes';\n      if (error.code === 'ECONNABORTED' || error.message.includes('Timeout')) {\n        errorMessage = 'Timeout: Le serveur met trop de temps √† r√©pondre';\n      } else if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 404) {\n        errorMessage = 'Route non trouv√©e';\n      } else if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        errorMessage = 'Non autoris√© - Veuillez vous reconnecter';\n      } else if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 408) {\n        errorMessage = 'Timeout serveur: La requ√™te prend trop de temps';\n      } else if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) >= 500) {\n        errorMessage = 'Erreur serveur - Veuillez r√©essayer plus tard';\n      } else if (!error.response) {\n        errorMessage = 'Impossible de contacter le serveur';\n      }\n      setError(errorMessage);\n      setOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ajouter une nouvelle commande\n  const addOrder = newOrder => {\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\n  };\n\n  // Fonction pour mettre √† jour le statut d'une commande\n  const updateOrderStatus = (orderId, newStatus) => {\n    setOrders(prevOrders => prevOrders.map(order => order._id === orderId ? {\n      ...order,\n      statut: newStatus\n    } : order));\n  };\n\n  // Fonction pour obtenir le nombre de commandes\n  const getOrdersCount = () => {\n    return orders.length;\n  };\n\n  // Fonction pour obtenir les commandes par statut\n  const getOrdersByStatus = status => {\n    return orders.filter(order => order.statut === status);\n  };\n\n  // Charger les commandes au montage du composant\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const value = {\n    orders,\n    loading,\n    error,\n    fetchOrders,\n    addOrder,\n    updateOrderStatus,\n    getOrdersCount,\n    getOrdersByStatus\n  };\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s2(OrdersProvider, \"NvRvzRo6fN35U/te/Upk6+qZnyE=\");\n_c = OrdersProvider;\nexport default OrdersContext;\nvar _c;\n$RefreshReg$(_c, \"OrdersProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","OrdersContext","useOrders","_s","context","Error","OrdersProvider","children","_s2","orders","setOrders","loading","setLoading","error","setError","fetchOrders","token","localStorage","getItem","console","log","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","method","headers","signal","clearTimeout","status","removeItem","ok","statusText","data","json","length","fetchError","name","_error$response","_error$response2","_error$response3","_error$response4","errorMessage","code","message","includes","addOrder","newOrder","prevOrders","updateOrderStatus","orderId","newStatus","map","order","_id","statut","getOrdersCount","getOrdersByStatus","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/contexts/OrdersContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\n\r\nconst OrdersContext = createContext();\r\n\r\nexport const useOrders = () => {\r\n  const context = useContext(OrdersContext);\r\n  if (!context) {\r\n    throw new Error('useOrders must be used within an OrdersProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const OrdersProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fonction pour r√©cup√©rer les commandes de l'utilisateur\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log('üîë Pas de token d\\'authentification');\r\n        setOrders([]);\r\n        setLoading(false);\r\n        setError('Veuillez vous connecter pour voir vos commandes');\r\n        return;\r\n      }\r\n\r\n      // SOLUTION ROBUSTE: Utiliser uniquement fetch avec timeout court\r\n      console.log('üì§ R√©cup√©ration des commandes avec fetch...');\r\n      \r\n      const controller = new AbortController();\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 secondes max\r\n      \r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/orders', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'x-auth-token': token\r\n          },\r\n          signal: controller.signal\r\n        });\r\n        \r\n        clearTimeout(timeoutId);\r\n        \r\n        console.log(`üìä R√©ponse serveur: ${response.status}`);\r\n        \r\n        if (response.status === 401) {\r\n          console.log('üîë Token expir√© ou invalide');\r\n          localStorage.removeItem('token');\r\n          setOrders([]);\r\n          setLoading(false);\r\n          setError('Session expir√©e - Veuillez vous reconnecter');\r\n          return;\r\n        }\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n        \r\n        const data = await response.json();\r\n        console.log(`‚úÖ ${data.length} commande(s) r√©cup√©r√©e(s)`);\r\n        setOrders(data);\r\n        \r\n      } catch (fetchError) {\r\n        clearTimeout(timeoutId);\r\n        \r\n        if (fetchError.name === 'AbortError') {\r\n          throw new Error('Timeout: Le serveur met trop de temps √† r√©pondre');\r\n        }\r\n        throw fetchError;\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur lors du chargement des commandes:', error);\r\n      \r\n      let errorMessage = 'Erreur lors du chargement des commandes';\r\n      \r\n      if (error.code === 'ECONNABORTED' || error.message.includes('Timeout')) {\r\n        errorMessage = 'Timeout: Le serveur met trop de temps √† r√©pondre';\r\n      } else if (error.response?.status === 404) {\r\n        errorMessage = 'Route non trouv√©e';\r\n      } else if (error.response?.status === 401) {\r\n        errorMessage = 'Non autoris√© - Veuillez vous reconnecter';\r\n      } else if (error.response?.status === 408) {\r\n        errorMessage = 'Timeout serveur: La requ√™te prend trop de temps';\r\n      } else if (error.response?.status >= 500) {\r\n        errorMessage = 'Erreur serveur - Veuillez r√©essayer plus tard';\r\n      } else if (!error.response) {\r\n        errorMessage = 'Impossible de contacter le serveur';\r\n      }\r\n      \r\n      setError(errorMessage);\r\n      setOrders([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fonction pour ajouter une nouvelle commande\r\n  const addOrder = (newOrder) => {\r\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\r\n  };\r\n\r\n  // Fonction pour mettre √† jour le statut d'une commande\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    setOrders(prevOrders => \r\n      prevOrders.map(order => \r\n        order._id === orderId \r\n          ? { ...order, statut: newStatus }\r\n          : order\r\n      )\r\n    );\r\n  };\r\n\r\n  // Fonction pour obtenir le nombre de commandes\r\n  const getOrdersCount = () => {\r\n    return orders.length;\r\n  };\r\n\r\n  // Fonction pour obtenir les commandes par statut\r\n  const getOrdersByStatus = (status) => {\r\n    return orders.filter(order => order.statut === status);\r\n  };\r\n\r\n  // Charger les commandes au montage du composant\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const value = {\r\n    orders,\r\n    loading,\r\n    error,\r\n    fetchOrders,\r\n    addOrder,\r\n    updateOrderStatus,\r\n    getOrdersCount,\r\n    getOrdersByStatus\r\n  };\r\n\r\n  return (\r\n    <OrdersContext.Provider value={value}>\r\n      {children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrdersContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}