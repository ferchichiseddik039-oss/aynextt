{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { useAuth } from '../contexts/AuthContext';\nexport const useKeyboardShortcuts = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    const handleKeyDown = event => {\n      // Raccourci Ctrl+Shift+A pour accéder à l'admin\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'a') {\n        event.preventDefault();\n        if (isAuthenticated && isAdmin) {\n          // Si l'utilisateur est connecté et admin, naviguer vers /admin\n          toast.success('Accès à l\\'administration autorisé');\n          navigate('/admin');\n        } else if (isAuthenticated && !isAdmin) {\n          // Si l'utilisateur est connecté mais pas admin, afficher un message\n          toast.error('Accès refusé : Vous devez être administrateur pour accéder à cette section.');\n        } else {\n          // Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion admin\n          toast.info('Veuillez vous connecter en tant qu\\'administrateur');\n          navigate('/admin/login');\n        }\n      }\n    };\n\n    // Ajouter l'écouteur d'événements\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Nettoyer l'écouteur d'événements lors du démontage\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [navigate, isAuthenticated, isAdmin]);\n};\n_s(useKeyboardShortcuts, \"KX0cA4xUFCA03hix9sp3CSu4NU8=\", false, function () {\n  return [useNavigate, useAuth];\n});","map":{"version":3,"names":["useEffect","useNavigate","toast","useAuth","useKeyboardShortcuts","_s","navigate","isAuthenticated","isAdmin","handleKeyDown","event","ctrlKey","shiftKey","key","toLowerCase","preventDefault","success","error","info","document","addEventListener","removeEventListener"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/hooks/useKeyboardShortcuts.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport const useKeyboardShortcuts = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      // Raccourci Ctrl+Shift+A pour accéder à l'admin\r\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'a') {\r\n        event.preventDefault();\r\n        \r\n        if (isAuthenticated && isAdmin) {\r\n          // Si l'utilisateur est connecté et admin, naviguer vers /admin\r\n          toast.success('Accès à l\\'administration autorisé');\r\n          navigate('/admin');\r\n        } else if (isAuthenticated && !isAdmin) {\r\n          // Si l'utilisateur est connecté mais pas admin, afficher un message\r\n          toast.error('Accès refusé : Vous devez être administrateur pour accéder à cette section.');\r\n        } else {\r\n          // Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion admin\r\n          toast.info('Veuillez vous connecter en tant qu\\'administrateur');\r\n          navigate('/admin/login');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Ajouter l'écouteur d'événements\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Nettoyer l'écouteur d'événements lors du démontage\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [navigate, isAuthenticated, isAdmin]);\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,OAAO,QAAQ,yBAAyB;AAEjD,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM,eAAe;IAAEC;EAAQ,CAAC,GAAGL,OAAO,CAAC,CAAC;EAE9CH,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAIC,KAAK,IAAK;MAC/B;MACA,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE;QACtEJ,KAAK,CAACK,cAAc,CAAC,CAAC;QAEtB,IAAIR,eAAe,IAAIC,OAAO,EAAE;UAC9B;UACAN,KAAK,CAACc,OAAO,CAAC,oCAAoC,CAAC;UACnDV,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM,IAAIC,eAAe,IAAI,CAACC,OAAO,EAAE;UACtC;UACAN,KAAK,CAACe,KAAK,CAAC,6EAA6E,CAAC;QAC5F,CAAC,MAAM;UACL;UACAf,KAAK,CAACgB,IAAI,CAAC,oDAAoD,CAAC;UAChEZ,QAAQ,CAAC,cAAc,CAAC;QAC1B;MACF;IACF,CAAC;;IAED;IACAa,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEX,aAAa,CAAC;;IAEnD;IACA,OAAO,MAAM;MACXU,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEZ,aAAa,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACH,QAAQ,EAAEC,eAAe,EAAEC,OAAO,CAAC,CAAC;AAC1C,CAAC;AAACH,EAAA,CAjCWD,oBAAoB;EAAA,QACdH,WAAW,EACSE,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}