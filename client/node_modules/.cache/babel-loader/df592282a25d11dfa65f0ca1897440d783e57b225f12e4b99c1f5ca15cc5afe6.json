{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\houda\\\\OneDrive\\\\Bureau\\\\boutique-vetements\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(localStorage.getItem('token'));\n  const [loading, setLoading] = useState(true);\n\n  // Configurer axios avec le token\n  useEffect(() => {\n    if (token) {\n      axios.defaults.headers.common['x-auth-token'] = token;\n      loadUser();\n    } else {\n      setLoading(false);\n    }\n  }, [token]);\n\n  // Charger les informations de l'utilisateur\n  const loadUser = async () => {\n    try {\n      const res = await axios.get('/api/auth/utilisateur');\n      setUser(res.data);\n    } catch (err) {\n      localStorage.removeItem('token');\n      delete axios.defaults.headers.common['x-auth-token'];\n      setToken(null);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Inscription\n  const register = async userData => {\n    try {\n      const res = await axios.post('/api/auth/inscription', userData);\n      const {\n        token: newToken,\n        user: newUser\n      } = res.data;\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n      axios.defaults.headers.common['x-auth-token'] = newToken;\n      toast.success('Inscription réussie !');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Erreur lors de l\\'inscription';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Connexion\n  const login = async credentials => {\n    try {\n      const res = await api.post('/api/auth/connexion', credentials);\n      const {\n        token: newToken,\n        user: newUser\n      } = res.data;\n      setToken(newToken);\n      setUser(newUser);\n      localStorage.setItem('token', newToken);\n      axios.defaults.headers.common['x-auth-token'] = newToken;\n      toast.success('Connexion réussie !');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const message = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Erreur lors de la connexion';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Déconnexion\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['x-auth-token'];\n    toast.success('Déconnexion réussie');\n  };\n\n  // Mettre à jour le profil\n  const updateProfile = async profileData => {\n    try {\n      const res = await axios.put('/api/users/profile', profileData);\n      setUser(res.data);\n      toast.success('Profil mis à jour avec succès !');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const message = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Erreur lors de la mise à jour du profil';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n\n  // Changer le mot de passe\n  const changePassword = async passwordData => {\n    try {\n      await axios.put('/api/users/password', passwordData);\n      toast.success('Mot de passe mis à jour avec succès !');\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      const message = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Erreur lors du changement de mot de passe';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    user,\n    token,\n    loading,\n    register,\n    login,\n    logout,\n    updateProfile,\n    changePassword,\n    isAuthenticated: !!token,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6yaUUgx9bt/8SVo6kb7BgPC/qRU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","localStorage","getItem","loading","setLoading","axios","defaults","headers","common","loadUser","res","get","data","err","removeItem","register","userData","post","newToken","newUser","setItem","success","_err$response","_err$response$data","message","response","error","login","credentials","_err$response2","_err$response2$data","logout","updateProfile","profileData","put","_err$response3","_err$response3$data","changePassword","passwordData","_err$response4","_err$response4$data","value","isAuthenticated","isAdmin","role","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(localStorage.getItem('token'));\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Configurer axios avec le token\r\n  useEffect(() => {\r\n    if (token) {\r\n      axios.defaults.headers.common['x-auth-token'] = token;\r\n      loadUser();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [token]);\r\n\r\n  // Charger les informations de l'utilisateur\r\n  const loadUser = async () => {\r\n    try {\r\n      const res = await axios.get('/api/auth/utilisateur');\r\n      setUser(res.data);\r\n    } catch (err) {\r\n      localStorage.removeItem('token');\r\n      delete axios.defaults.headers.common['x-auth-token'];\r\n      setToken(null);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Inscription\r\n  const register = async (userData) => {\r\n    try {\r\n      const res = await axios.post('/api/auth/inscription', userData);\r\n      const { token: newToken, user: newUser } = res.data;\r\n      \r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      localStorage.setItem('token', newToken);\r\n      axios.defaults.headers.common['x-auth-token'] = newToken;\r\n      \r\n      toast.success('Inscription réussie !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de l\\'inscription';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Connexion\r\n  const login = async (credentials) => {\r\n    try {\r\n      const res = await api.post('/api/auth/connexion', credentials);\r\n      const { token: newToken, user: newUser } = res.data;\r\n      \r\n      setToken(newToken);\r\n      setUser(newUser);\r\n      localStorage.setItem('token', newToken);\r\n      axios.defaults.headers.common['x-auth-token'] = newToken;\r\n      \r\n      toast.success('Connexion réussie !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de la connexion';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Déconnexion\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n    toast.success('Déconnexion réussie');\r\n  };\r\n\r\n  // Mettre à jour le profil\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const res = await axios.put('/api/users/profile', profileData);\r\n      setUser(res.data);\r\n      toast.success('Profil mis à jour avec succès !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors de la mise à jour du profil';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  // Changer le mot de passe\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      await axios.put('/api/users/password', passwordData);\r\n      toast.success('Mot de passe mis à jour avec succès !');\r\n      return { success: true };\r\n    } catch (err) {\r\n      const message = err.response?.data?.message || 'Erreur lors du changement de mot de passe';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateProfile,\r\n    changePassword,\r\n    isAuthenticated: !!token,\r\n    isAdmin: user?.role === 'admin'\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}