{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\houda\\\\OneDrive\\\\Bureau\\\\boutique-vetements\\\\client\\\\src\\\\contexts\\\\OrdersContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport api from '../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrdersContext = /*#__PURE__*/createContext();\nexport const useOrders = () => {\n  _s();\n  const context = useContext(OrdersContext);\n  if (!context) {\n    throw new Error('useOrders must be used within an OrdersProvider');\n  }\n  return context;\n};\n_s(useOrders, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const OrdersProvider = ({\n  children\n}) => {\n  _s2();\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Fonction pour récupérer les commandes de l'utilisateur\n  const fetchOrders = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.log('🔑 Pas de token d\\'authentification');\n        setOrders([]);\n        return;\n      }\n      console.log('📤 Récupération des commandes...');\n      const response = await api.get('/api/orders', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      console.log('📥 Réponse des commandes:', response.data);\n\n      // Le serveur retourne directement le tableau des commandes\n      const orders = Array.isArray(response.data) ? response.data : [];\n      setOrders(orders);\n      console.log(`✅ ${orders.length} commande(s) chargée(s)`);\n    } catch (error) {\n      console.error('❌ Erreur lors du chargement des commandes:', error);\n      setError('Erreur lors du chargement des commandes');\n      setOrders([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fonction pour ajouter une nouvelle commande\n  const addOrder = newOrder => {\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\n  };\n\n  // Fonction pour mettre à jour le statut d'une commande\n  const updateOrderStatus = (orderId, newStatus) => {\n    setOrders(prevOrders => prevOrders.map(order => order._id === orderId ? {\n      ...order,\n      statut: newStatus\n    } : order));\n  };\n\n  // Fonction pour obtenir le nombre de commandes\n  const getOrdersCount = () => {\n    return orders.length;\n  };\n\n  // Fonction pour obtenir les commandes par statut\n  const getOrdersByStatus = status => {\n    return orders.filter(order => order.statut === status);\n  };\n\n  // Charger les commandes au montage du composant\n  useEffect(() => {\n    fetchOrders();\n  }, []);\n  const value = {\n    orders,\n    loading,\n    error,\n    fetchOrders,\n    addOrder,\n    updateOrderStatus,\n    getOrdersCount,\n    getOrdersByStatus\n  };\n  return /*#__PURE__*/_jsxDEV(OrdersContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s2(OrdersProvider, \"NvRvzRo6fN35U/te/Upk6+qZnyE=\");\n_c = OrdersProvider;\nexport default OrdersContext;\nvar _c;\n$RefreshReg$(_c, \"OrdersProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","OrdersContext","useOrders","_s","context","Error","OrdersProvider","children","_s2","orders","setOrders","loading","setLoading","error","setError","fetchOrders","token","localStorage","getItem","console","log","response","get","headers","data","Array","isArray","length","addOrder","newOrder","prevOrders","updateOrderStatus","orderId","newStatus","map","order","_id","statut","getOrdersCount","getOrdersByStatus","status","filter","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/contexts/OrdersContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport api from '../config/axios';\r\n\r\nconst OrdersContext = createContext();\r\n\r\nexport const useOrders = () => {\r\n  const context = useContext(OrdersContext);\r\n  if (!context) {\r\n    throw new Error('useOrders must be used within an OrdersProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const OrdersProvider = ({ children }) => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fonction pour récupérer les commandes de l'utilisateur\r\n  const fetchOrders = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        console.log('🔑 Pas de token d\\'authentification');\r\n        setOrders([]);\r\n        return;\r\n      }\r\n\r\n      console.log('📤 Récupération des commandes...');\r\n      const response = await api.get('/api/orders', {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      });\r\n\r\n      console.log('📥 Réponse des commandes:', response.data);\r\n      \r\n      // Le serveur retourne directement le tableau des commandes\r\n      const orders = Array.isArray(response.data) ? response.data : [];\r\n      setOrders(orders);\r\n      \r\n      console.log(`✅ ${orders.length} commande(s) chargée(s)`);\r\n    } catch (error) {\r\n      console.error('❌ Erreur lors du chargement des commandes:', error);\r\n      setError('Erreur lors du chargement des commandes');\r\n      setOrders([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fonction pour ajouter une nouvelle commande\r\n  const addOrder = (newOrder) => {\r\n    setOrders(prevOrders => [newOrder, ...prevOrders]);\r\n  };\r\n\r\n  // Fonction pour mettre à jour le statut d'une commande\r\n  const updateOrderStatus = (orderId, newStatus) => {\r\n    setOrders(prevOrders => \r\n      prevOrders.map(order => \r\n        order._id === orderId \r\n          ? { ...order, statut: newStatus }\r\n          : order\r\n      )\r\n    );\r\n  };\r\n\r\n  // Fonction pour obtenir le nombre de commandes\r\n  const getOrdersCount = () => {\r\n    return orders.length;\r\n  };\r\n\r\n  // Fonction pour obtenir les commandes par statut\r\n  const getOrdersByStatus = (status) => {\r\n    return orders.filter(order => order.statut === status);\r\n  };\r\n\r\n  // Charger les commandes au montage du composant\r\n  useEffect(() => {\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  const value = {\r\n    orders,\r\n    loading,\r\n    error,\r\n    fetchOrders,\r\n    addOrder,\r\n    updateOrderStatus,\r\n    getOrdersCount,\r\n    getOrdersByStatus\r\n  };\r\n\r\n  return (\r\n    <OrdersContext.Provider value={value}>\r\n      {children}\r\n    </OrdersContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrdersContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}