{"ast":null,"code":"// Utilitaires pour formater les données des produits\n\n/**\r\n * Formate une valeur qui peut être un objet ou une chaîne\r\n * @param {any} value - La valeur à formater\r\n * @param {string} fallback - Valeur de fallback si la valeur est vide\r\n * @returns {string} - La valeur formatée en chaîne\r\n */\nexport const formatProductValue = (value, fallback = '') => {\n  if (!value) return fallback;\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (typeof value === 'object' && value !== null) {\n    // Debug: Afficher un avertissement si on trouve un objet\n    if (process.env.NODE_ENV === 'development') {\n      console.warn('Objet détecté dans formatProductValue:', value);\n    }\n    return value.nom || value.name || value.code || value._id || fallback;\n  }\n  return String(value);\n};\n\n/**\r\n * Formate une marque de produit\r\n * @param {any} marque - La marque à formater\r\n * @returns {string} - La marque formatée\r\n */\nexport const formatBrand = marque => {\n  return formatProductValue(marque, '');\n};\n\n/**\r\n * Formate une catégorie de produit\r\n * @param {any} categorie - La catégorie à formater\r\n * @returns {string} - La catégorie formatée\r\n */\nexport const formatCategory = categorie => {\n  return formatProductValue(categorie, '');\n};","map":{"version":3,"names":["formatProductValue","value","fallback","process","env","NODE_ENV","console","warn","nom","name","code","_id","String","formatBrand","marque","formatCategory","categorie"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/utils/formatUtils.js"],"sourcesContent":["// Utilitaires pour formater les données des produits\r\n\r\n/**\r\n * Formate une valeur qui peut être un objet ou une chaîne\r\n * @param {any} value - La valeur à formater\r\n * @param {string} fallback - Valeur de fallback si la valeur est vide\r\n * @returns {string} - La valeur formatée en chaîne\r\n */\r\nexport const formatProductValue = (value, fallback = '') => {\r\n  if (!value) return fallback;\r\n  \r\n  if (typeof value === 'string') {\r\n    return value;\r\n  }\r\n  \r\n  if (typeof value === 'object' && value !== null) {\r\n    // Debug: Afficher un avertissement si on trouve un objet\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.warn('Objet détecté dans formatProductValue:', value);\r\n    }\r\n    return value.nom || value.name || value.code || value._id || fallback;\r\n  }\r\n  \r\n  return String(value);\r\n};\r\n\r\n/**\r\n * Formate une marque de produit\r\n * @param {any} marque - La marque à formater\r\n * @returns {string} - La marque formatée\r\n */\r\nexport const formatBrand = (marque) => {\r\n  return formatProductValue(marque, '');\r\n};\r\n\r\n/**\r\n * Formate une catégorie de produit\r\n * @param {any} categorie - La catégorie à formater\r\n * @returns {string} - La catégorie formatée\r\n */\r\nexport const formatCategory = (categorie) => {\r\n  return formatProductValue(categorie, '');\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,QAAQ,GAAG,EAAE,KAAK;EAC1D,IAAI,CAACD,KAAK,EAAE,OAAOC,QAAQ;EAE3B,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EAEA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;IAC/C;IACA,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;MAC1CC,OAAO,CAACC,IAAI,CAAC,wCAAwC,EAAEN,KAAK,CAAC;IAC/D;IACA,OAAOA,KAAK,CAACO,GAAG,IAAIP,KAAK,CAACQ,IAAI,IAAIR,KAAK,CAACS,IAAI,IAAIT,KAAK,CAACU,GAAG,IAAIT,QAAQ;EACvE;EAEA,OAAOU,MAAM,CAACX,KAAK,CAAC;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMY,WAAW,GAAIC,MAAM,IAAK;EACrC,OAAOd,kBAAkB,CAACc,MAAM,EAAE,EAAE,CAAC;AACvC,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAIC,SAAS,IAAK;EAC3C,OAAOhB,kBAAkB,CAACgB,SAAS,EAAE,EAAE,CAAC;AAC1C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}