{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nexport const useKeyboardShortcuts = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    isAuthenticated,\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    const handleKeyDown = event => {\n      // Raccourci Ctrl+Shift+A pour accéder à l'admin\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'a') {\n        event.preventDefault();\n        if (isAuthenticated && isAdmin) {\n          // Si l'utilisateur est connecté et admin, naviguer vers /admin\n          navigate('/admin');\n        } else if (isAuthenticated && !isAdmin) {\n          // Si l'utilisateur est connecté mais pas admin, afficher un message\n          alert('Accès refusé : Vous devez être administrateur pour accéder à cette section.');\n        } else {\n          // Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion\n          navigate('/login');\n        }\n      }\n    };\n\n    // Ajouter l'écouteur d'événements\n    document.addEventListener('keydown', handleKeyDown);\n\n    // Nettoyer l'écouteur d'événements lors du démontage\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [navigate, isAuthenticated, isAdmin]);\n};\n_s(useKeyboardShortcuts, \"KX0cA4xUFCA03hix9sp3CSu4NU8=\", false, function () {\n  return [useNavigate, useAuth];\n});","map":{"version":3,"names":["useEffect","useNavigate","useAuth","useKeyboardShortcuts","_s","navigate","isAuthenticated","isAdmin","handleKeyDown","event","ctrlKey","shiftKey","key","toLowerCase","preventDefault","alert","document","addEventListener","removeEventListener"],"sources":["C:/Users/houda/OneDrive/Bureau/boutique-vetements/client/src/hooks/useKeyboardShortcuts.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\nexport const useKeyboardShortcuts = () => {\r\n  const navigate = useNavigate();\r\n  const { isAuthenticated, isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      // Raccourci Ctrl+Shift+A pour accéder à l'admin\r\n      if (event.ctrlKey && event.shiftKey && event.key.toLowerCase() === 'a') {\r\n        event.preventDefault();\r\n        \r\n        if (isAuthenticated && isAdmin) {\r\n          // Si l'utilisateur est connecté et admin, naviguer vers /admin\r\n          navigate('/admin');\r\n        } else if (isAuthenticated && !isAdmin) {\r\n          // Si l'utilisateur est connecté mais pas admin, afficher un message\r\n          alert('Accès refusé : Vous devez être administrateur pour accéder à cette section.');\r\n        } else {\r\n          // Si l'utilisateur n'est pas connecté, rediriger vers la page de connexion\r\n          navigate('/login');\r\n        }\r\n      }\r\n    };\r\n\r\n    // Ajouter l'écouteur d'événements\r\n    document.addEventListener('keydown', handleKeyDown);\r\n\r\n    // Nettoyer l'écouteur d'événements lors du démontage\r\n    return () => {\r\n      document.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [navigate, isAuthenticated, isAdmin]);\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,yBAAyB;AAEjD,OAAO,MAAMC,oBAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAMC,QAAQ,GAAGJ,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEK,eAAe;IAAEC;EAAQ,CAAC,GAAGL,OAAO,CAAC,CAAC;EAE9CF,SAAS,CAAC,MAAM;IACd,MAAMQ,aAAa,GAAIC,KAAK,IAAK;MAC/B;MACA,IAAIA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACG,GAAG,CAACC,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE;QACtEJ,KAAK,CAACK,cAAc,CAAC,CAAC;QAEtB,IAAIR,eAAe,IAAIC,OAAO,EAAE;UAC9B;UACAF,QAAQ,CAAC,QAAQ,CAAC;QACpB,CAAC,MAAM,IAAIC,eAAe,IAAI,CAACC,OAAO,EAAE;UACtC;UACAQ,KAAK,CAAC,6EAA6E,CAAC;QACtF,CAAC,MAAM;UACL;UACAV,QAAQ,CAAC,QAAQ,CAAC;QACpB;MACF;IACF,CAAC;;IAED;IACAW,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAET,aAAa,CAAC;;IAEnD;IACA,OAAO,MAAM;MACXQ,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEV,aAAa,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACH,QAAQ,EAAEC,eAAe,EAAEC,OAAO,CAAC,CAAC;AAC1C,CAAC;AAACH,EAAA,CA/BWD,oBAAoB;EAAA,QACdF,WAAW,EACSC,OAAO;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}